<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	autoDrawBackground="false" 
	resizeMode="scale" 
	creationComplete="init()"
	dataChange="onDataChange(event)">
	
	<fx:Script>
		<![CDATA[
			import edu.newschool.piim.healthboard.components.appointments.ProviderOverviewItem;
			
			import edu.newschool.piim.healthboard.controller.AppointmentsController;
			import edu.newschool.piim.healthboard.controller.MainController;
			import edu.newschool.piim.healthboard.controller.TeamAppointmentsController;
			
			import edu.newschool.piim.healthboard.model.ProviderModel;
			import edu.newschool.piim.healthboard.model.TeamAppointmentsModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			
			private var dirty:Boolean;
			
			override public function set data(value:Object):void
			{
				if( !dirty ) dirty = data != value;
				
				super.data = value;
			}
			
			private function onDataChange(event:FlexEvent=null):void
			{
				if( !dirty || !data ) return;
				
				var providers:ArrayCollection = TeamAppointmentsModel( MainController( AppProperties.getInstance().controller ).teamAppointmentsController.model ).selectedProviders;
				
				var day:Date = new Date();
				day.time = parseInt( data.toString() );
				dayLabel.text = day.date.toString();
				
				providerList.removeAllElements();
				
				
				for each(var provider:ProviderModel in providers)
				{
					var overview:ProviderOverviewItem = new ProviderOverviewItem();
					overview.provider = provider;
					overview.day = day;
					overview.width = 76;
					overview.height = providerList.height / providers.length;
					providerList.addElement( overview );
				}
				
				updateState();
				
				dirty = false;
			}
			
			private function updateState():void
			{
				if( dayLabel ) dayLabel.styleName = selected ? 'calendarSelectedDay' : 'lightGray11';
				if( providerList && border ) providerList.alpha = border.alpha = selected ? 1 : .45;
			}
			
			override public function set width(value:Number):void
			{
				super.width = value;
			}
			
			override public function set selected(value:Boolean):void
			{
				super.selected = value;
				
				updateState();
			}
			
			private function onProvidersChange(event:CollectionEvent):void
			{
				dirty = true;
				
				onDataChange();
			}
			
			private function init():void
			{
				TeamAppointmentsModel( MainController( AppProperties.getInstance().controller ).teamAppointmentsController.model ).selectedProviders.addEventListener(CollectionEvent.COLLECTION_CHANGE, onProvidersChange );
			}
		]]>
	</fx:Script>
	
	<s:BorderContainer id="border" borderColor="0xffffff" backgroundAlpha="0">
		
		<s:layout>
			<s:BasicLayout  />
		</s:layout>
		
		<s:Label id="dayLabel" width="20" x="75" y="5" styleName="lightGray11" fontSize="11" />
		
		<s:VGroup id="providerList" gap="2" x="10" y="20" height="60" />
		
	</s:BorderContainer>
	
</s:ItemRenderer>
