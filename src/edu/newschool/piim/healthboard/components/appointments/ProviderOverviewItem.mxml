<?xml version="1.0" encoding="utf-8"?>
<s:VGroup 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
  	xmlns:s="library://ns.adobe.com/flex/spark" 
  	xmlns:mx="library://ns.adobe.com/flex/mx"
	creationComplete="init()">
	
	<fx:Declarations>
		<s:SolidColorStroke id="borderStroke" color="0xffffff" weight="0.5" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import edu.newschool.piim.healthboard.controller.AppointmentsController;
			import edu.newschool.piim.healthboard.controller.MainController;
			import edu.newschool.piim.healthboard.controller.TeamAppointmentsController;
			
			import edu.newschool.piim.healthboard.model.Appointment;
			import edu.newschool.piim.healthboard.model.ProviderModel;
			import edu.newschool.piim.healthboard.model.UserModel;
			
			import mx.collections.ArrayCollection;
			
			import spark.components.BorderContainer;
			
			public var provider:ProviderModel;
			public var day:Date;
			
			[Bindable] public var showLabel:Boolean = true;
			
			private function init():void
			{
				breakdown.height = showLabel ? height-label.height-gap : height;
				
				var percentages:Array = [];
				
				var appointments:ArrayCollection = MainController( AppProperties.getInstance().controller ).teamAppointmentsController.getAppointments( provider.id, UserModel.TYPE_PROVIDER, day );
				
				for each(var a:Appointment in appointments)
				{
					if( !percentages[a.type] ) percentages[a.type] = {type:a.type, count:0};
					
					percentages[a.type].count += 1;
				}
				
				var square:BorderContainer;
				
				if( appointments.length )
				{
					var x:int=0;
					
					for each(var p:Object in percentages)
					{
						var percentage:Number = p.count / appointments.length;
						
						square = new BorderContainer();
						square.width = width * percentage;
						square.height = breakdown.height;
						square.x = x;
						square.borderStroke = borderStroke;
						square.backgroundFill = MainController( AppProperties.getInstance().controller ).teamAppointmentsController.getFill( p.type );;
						breakdown.addElement( square );
						
						x += square.width;
					}
				}
				else
				{
					square = new BorderContainer();
					square.width = width;
					square.height = breakdown.height;
					square.borderStroke = borderStroke;
					breakdown.addElement( square );
				}
				
				label.text = provider.lastName;
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="breakdown" width="100%" />
	
	<s:Label id="label" styleName="white9" visible="{height>=20 &amp;&amp; showLabel}" />
	
</s:VGroup>
