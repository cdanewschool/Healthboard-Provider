<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:popups="edu.newschool.piim.healthboard.components.popups.*"
	width="371" height="500"
	controlBarVisible="true" 
	skinClass="edu.newschool.piim.healthboard.view.skins.general.myHeaderlessTitleWindow"
	creationComplete="init()" >
	
	<fx:Script>
		<![CDATA[
			import edu.newschool.piim.healthboard.controller.MainController;
			
			import edu.newschool.piim.healthboard.events.AutoCompleteEvent;
			import edu.newschool.piim.healthboard.events.TeamAppointmentEvent;
			
			import edu.newschool.piim.healthboard.model.Appointment;
			import edu.newschool.piim.healthboard.model.PatientsModel;
			import edu.newschool.piim.healthboard.model.ProviderApplicationModel;
			import edu.newschool.piim.healthboard.model.UserModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.LinkButton;
			import mx.events.ItemClickEvent;
			
			import spark.components.List;
			import spark.components.RadioButton;
			import spark.events.IndexChangeEvent;
			
			import edu.newschool.piim.healthboard.util.StringUtil;
			
			public static const MODE_ADD:String = "add";
			public static const MODE_EDIT:String = "edit";
			
			[Bindable] public var user:UserModel;
			[Bindable] public var appointment:Appointment;
			[Bindable] public var mode:String = MODE_ADD;
			
			private var patients:ArrayCollection;
			
			private const PATIENT_PLACEHOLDER:String = "Enter name";
			
			private function save():void
			{
				if( mode == MODE_EDIT )
				{
					dispatchEvent( new TeamAppointmentEvent( TeamAppointmentEvent.SAVE ) );
				}
				else if( mode == MODE_ADD )
				{
					dispatchEvent( new TeamAppointmentEvent( TeamAppointmentEvent.ADD ) );
				}
			}
			
			private function cancelAppointment():void
			{
				dispatchEvent( new TeamAppointmentEvent( TeamAppointmentEvent.CANCEL ) );
			}
			
			private function cancel():void
			{
				dispatchEvent( new Event( Event.CANCEL ) );
			}
			
			private function showResults():void
			{
				var evt:AutoCompleteEvent = new AutoCompleteEvent( AutoCompleteEvent.SHOW, true );
				evt.dataProvider = patients;
				evt.targetField = patient;
				evt.desiredWidth = patient.width;
				evt.callbackFunction = selectResult;
				evt.labelFunction = getDisplayName;
				evt.backgroundColor = 0xFFFFFF;
				
				dispatchEvent( evt );
			}
			
			protected function selectResult(event:IndexChangeEvent):void
			{
				var user:UserModel = List(event.currentTarget).selectedItem;
				if( !user ) return;
				
				appointment.patient = user;
				
				patient.text = user ? user.fullName : PATIENT_PLACEHOLDER;
				
				dispatchEvent( new AutoCompleteEvent( AutoCompleteEvent.HIDE ) );
				
				stage.focus = null;
			}
			
			private function getDisplayName(item:UserModel):String
			{
				return item.firstName + ' ' + item.lastName;
			}
			
			private function filter():void
			{
				patients.refresh();
			}
			
			private function filterPatients(item:Object):Boolean 
			{
				var pattern:RegExp = new RegExp("[^]*"+patient.text+"[^]*", "i");
				var searchFilter:Boolean = (patient.text == 'Search' || patient.text == '') ? true : (pattern.test(item.lastName) || pattern.test(item.firstName));
				
				return searchFilter;
			}
			
			private function init():void
			{
				controlBarVisible = false;
				
				patients = new ArrayCollection( PatientsModel(MainController(AppProperties.getInstance().controller).patientsController.model).patients.source );
				patients.filterFunction = filterPatients;
				
				patient.text = appointment.patient ? appointment.patient.fullName : PATIENT_PLACEHOLDER;
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="20" paddingTop="15" paddingRight="20" gap="12" horizontalAlign="left" />
	</s:layout>
	
	<s:Label text="{mode==MODE_EDIT?'Edit':'Add'} Appointment" styleName="darkGrayBold16" paddingBottom="5" />
	
	<mx:FormItem label="Patient:" labelWidth="67" labelStyleName="darkGrayBold12">
		<s:TextInput id="patient" styleName="{patient.text == PATIENT_PLACEHOLDER ? 'searchPlaceholder' : 'grayText11'}" paddingLeft="7" paddingTop="5" width="215" height="24" change="filter();showResults()" click="{if(patient.text == PATIENT_PLACEHOLDER) { patient.text=''} showResults()}" />
	</mx:FormItem>
	
	<popups:AddAppointmentForm id="form" width="100%" appointment="{appointment}" />
	
	<s:VGroup paddingTop="0">
		<s:Line xFrom="0" xTo="328">
			<s:stroke>
				<s:SolidColorStroke color="0x4D4D4D" weight="1" alpha=".25" />
			</s:stroke>
		</s:Line>
	</s:VGroup>
	
	<s:HGroup horizontalAlign="right" width="100%" visible="{mode==MODE_ADD}" includeInLayout="{mode==MODE_ADD}">
		<s:HGroup gap="7">
			<s:Button label="Add Appointment" width="105" height="24" click="save();" skinClass="edu.newschool.piim.healthboard.view.skins.general.IconButtonSkin" enabled="{appointment.provider!=null}" />
			<s:Button label="Cancel" width="55" height="24" click="cancel();" skinClass="edu.newschool.piim.healthboard.view.skins.general.IconButtonSkin" />
		</s:HGroup>
	</s:HGroup>
	
	<s:Group visible="{mode==MODE_EDIT}" includeInLayout="{mode==MODE_EDIT}" width="100%">
		<s:layout>
			<s:BasicLayout />
		</s:layout>
		<s:Button label="Cancel This Appointment" width="140" height="24" click="cancelAppointment();" skinClass="edu.newschool.piim.healthboard.view.skins.general.IconButtonSkin" left="0" />
		<s:HGroup gap="10" right="0">
			<s:Button label="Submit Change" width="96" height="24" click="save();" skinClass="edu.newschool.piim.healthboard.view.skins.general.IconButtonSkin" enabled="{appointment.provider!=null}" />
			<s:Button label="Close" width="48" height="24" click="cancel();" skinClass="edu.newschool.piim.healthboard.view.skins.general.IconButtonSkin" />
		</s:HGroup>
	</s:Group>
	
</s:TitleWindow>
