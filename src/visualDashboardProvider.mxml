<?xml version="1.0" encoding="utf-8"?>
<s:Application 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:fxg="components.fxg.*"
	xmlns:plus="external.TabBarPlus.plus.*"
	xmlns:enhancedtitlewindow="external.collapsibleTitleWindow.components.enhancedtitlewindow.*"
	xmlns:general="components.general.*"
	xmlns:ASclasses="ASclasses.*"
	xmlns:modules="components.modules.*" 
	xmlns:widgets="components.widgets.*" 
	xmlns:views="components.views.*" 
	xmlns:components="components.*"
	fontFamily="myMyriad"
	minWidth="1024" minHeight="768" resize="onResize()"
	preinitialize="onPreinitialize(event)" creationComplete="init();onResize()" xmlns:modules1="modules.*" xmlns:home="components.home.*">

	<fx:Script source="ASfiles/home.as" />
	
	<fx:Declarations>
		<s:SolidColor id="colorMedicalRecordsOutpatient" color="0x71B2D1" /><!--also used for Medication's "Prescription Drugs"-->
		<s:SolidColor id="colorMedicalRecordsInpatient" color="0xDC9D00" /><!--also used for Medication's "Supplements"-->
		<s:SolidColor id="colorMedicationsPast" color="0x646464" />		
	</fx:Declarations>
	
	<fx:Style source="css/styles.css" />
	
	<fx:Script>
		<![CDATA[
			import ASclasses.Constants;
			
			import ASfiles.ProviderConstants;
			
			import events.ApplicationEvent;
			
			import models.PatientsModel;
			
			import mx.events.FlexEvent;
			
			private function onPreinitialize (event : FlexEvent) : void
			{
				AppProperties.getInstance().controller = new MainController();
				AppProperties.getInstance().controller.model.addEventListener( ApplicationEvent.STYLES_LOADED, onStylesLoaded );
			}
			
			private function onStylesLoaded( event:ApplicationEvent ):void
			{
				super.initialized = true;
			}
			
			override public function set initialized(value:Boolean):void {}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default" />
		<s:State name="forgotPassword" />
		<s:State name="passwordSent" />
		<s:State name="loggedIn" />
	</s:states>
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" />
	</s:layout>
	
	<s:transitions>
	</s:transitions>
	
	<views:LoginView 
		width="1024" includeIn="default" 
		authenticationSuccess="dispatchEvent( new ApplicationEvent( ApplicationEvent.SET_STATE, true, false, controller.model.viewMode) )" 
		allowAccountCreation="false"
		adminUsername="popo" />
	
	<s:VGroup includeIn="loggedIn" width="1024" horizontalAlign="center">	
		
		<!-- HEADER -->
		<s:Group width="100%">
			
			<s:BorderContainer width="1024" height="38" borderAlpha="0">
				
				<s:layout>
					<s:HorizontalLayout paddingTop="6" />
				</s:layout>
				
				<s:backgroundFill>
					<s:LinearGradient rotation="270">
						<s:GradientEntry color="0xB3B3B3" alpha="0" ratio="0" />
						<s:GradientEntry color="0x999999" alpha="1" ratio="1" /> <!--ratio="0.8834"-->
					</s:LinearGradient>
				</s:backgroundFill>
				
				<!--<s:VGroup paddingLeft="27" click="{currentState='widgetView'}" buttonMode="{currentState!='widgetView'}">
					<fxg:healthBoardLogoGray />
				</s:VGroup>-->
				
				<mx:Spacer width="100%" />
				
				<s:HGroup paddingRight="14">
					
					<general:MainLinkButton label="{controller.user.available == UserModel.STATE_AVAILABLE ? 'Available' : 'Unavailable'}" styleName="linkBtnYellow" fontSize="12" click="toggleAvailability(event)" toolTip="{controller.user.available == UserModel.STATE_AVAILABLE ? 'Change status to unavailable' : 'Change status to available'}" />
					<general:MainLinkButton id="btnProfile" label="{controller.user.fullName}" styleName="linkButtonStyle1" fontSize="12" click="dispatchEvent( new ApplicationEvent( ApplicationEvent.SET_STATE, true, false, ProviderConstants.STATE_PROFILE) )"  />
					<general:MainLinkButton id="btnLogout" label="Logout" styleName="linkButtonStyle3" fontSize="12"  paddingLeft="1" click="dispatchEvent( new ApplicationEvent( ApplicationEvent.SET_STATE, true, false, Constants.STATE_DEFAULT) )" />
					
					<s:HGroup paddingTop="-6" paddingLeft="-9">
						
						<s:DropDownList 
							id="dropDownView" 
							dataProvider="{model.settings}" labelField="label" 
							change="controller.selectSetting(event)" 
							dropShadowVisible="false" horizontalScrollPolicy="off"
							skinClass="skins.general.MyOptionsDropDownListSkin" itemRenderer="components.itemrenderers.EnabledListItemRenderer"
							color="0x074F72" rollOverColor="0xAEDBE2" selectionColor="0xAEDBE2" contentBackgroundColor="0xFFFFFF" 
							width="35" fontSize="12" /><!--change="dropDownView_changeHandler(event)"--> 
						
					</s:HGroup>
				</s:HGroup>
			</s:BorderContainer>
		</s:Group>
		
		<s:VGroup paddingTop="-45">
			
			<s:Group creationComplete="tabsMain.setTabClosePolicy(0, false)">
				
				<mx:ViewStack id="viewStackMain" borderColor="0xBDBCBC" cornerRadius="2" width="1024" height="100%" x="0" y="22" resizeToContent="true"><!--backgroundColor="0x4A4A49" borderVisible="true" borderStyle="solid" change="updateBreadcrumb('messages')" -->
					
					<s:NavigatorContent id="providerBox" icon="@Embed('/images/healthboard.png')">
						
						<s:layout>
							<s:VerticalLayout gap="0" paddingTop="15" />
						</s:layout>
						
						<s:Line xFrom="0" xTo="1024">
							<s:stroke>
								<s:SolidColorStroke color="0xFFFFFF" alpha="0.5" weight="1"/>
							</s:stroke>
						</s:Line>
						
						<mx:ViewStack id="viewStackProviderModules" paddingTop="-1" width="1024" resizeToContent="true" creationPolicy="auto">
							
							<s:NavigatorContent>
								
								<s:layout>
									<s:VerticalLayout />
								</s:layout>
								
								<s:HGroup gap="22" paddingTop="33" paddingLeft="32" minHeight="591" fontSize="12">
									
									<s:VGroup id="sidebarWidgets" gap="17">
										
										<widgets:MessagesWidget id="widgetMessages" width="305" collapsible="true" headerClickable="false" module="modMessages" showCloseButton="false" titleBarHeight="30" />
										
										<widgets:ChatWidget id="widgetChat" width="305" title="Chat" collapsible="true" headerClickable="false" showCloseButton="false" titleBarHeight="30" />
										
										<widgets:TeamWidget id="widgetTeam" width="305" title="Team Profile" collapsible="true" headerClickable="false" showCloseButton="false" titleBarHeight="30" model="{ProviderApplicationModel(controller.model).providersModel}" module="modTeamProfile" />
									
										<widgets:PublicHealthAdvisoryWidget id="widgetAdvisory" width="305" title="Public Health Advisory ({widgetAdvisory.model.activeAdvisories.length})" collapsible="true" headerClickable="false" showCloseButton="false" titleBarHeight="30" module="modPublicHealthAdvisory" />
										
									</s:VGroup>
									
									<s:VGroup gap="17">
										
										<widgets:PatientsWidget id="widgetMyPatients" width="633" title="My Patients ({PatientsModel(controller.patientsController.model).urgentPatientCount})" collapsible="true" headerClickable="false" module="modPatients" showCloseButton="false" titleBarHeight="30" color="0xFFFFFF" />
										
										<widgets:AppointmentsWidget id="widgetTeamAppointments" module="modTeamAppointments" width="633" headerClickable="false" collapsible="true" styleName="barChart" />

									</s:VGroup>
									
								</s:HGroup>
								
							</s:NavigatorContent>
							
							<modules:PatientsModule id="modPatients"/>
							
							<!--	messages	-->
							<modules1:MessagesModule id="modMessages" currentState="provider" />
							
							<!--	team profile	-->
							<modules:TeamModule id="modTeamProfile" model="{ProviderApplicationModel(controller.model).providersModel}" />
							
							<!--	appointments	-->
							<modules:AppointmentModule id="modTeamAppointments" />
							
							<!--	public health advisory	-->
							<modules:PublicHealthAdvisoryModule id="modPublicHealthAdvisory" />
							
						</mx:ViewStack>
						
					</s:NavigatorContent>
					
				</mx:ViewStack>
				
				<plus:TabBarPlus id="tabsMain" gap="6" height="38" left="6" cornerRadius="0" styleName="messagesTabs" closePolicy="always" dataProvider="{viewStackMain}" />
			
			</s:Group>
			
		</s:VGroup>
		
	</s:VGroup>
		
</s:Application>
