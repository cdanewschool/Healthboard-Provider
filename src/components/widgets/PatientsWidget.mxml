<?xml version="1.0" encoding="utf-8"?>
<enhancedtitlewindow:EnhancedTitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:enhancedtitlewindow="external.collapsibleTitleWindow.components.enhancedtitlewindow.*" 
	creationComplete="init()" xmlns:general="components.general.*">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import ASfiles.ProviderConstants;
			
			import controllers.MainController;
			import controllers.PatientsController;
			
			import enum.UrgencyType;
			
			import events.ApplicationEvent;
			
			import models.Appointment;
			import models.PatientModel;
			import models.PatientsModel;
			import models.ProviderApplicationModel;
			import models.ProviderModel;
			import models.UserModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.ListEvent;
			
			import spark.events.DropDownEvent;
			
			[Bindable] public var controller:PatientsController = MainController( AppProperties.getInstance().controller ).patientsController as PatientsController;
			[Bindable] public var model:PatientsModel = controller.model as PatientsModel;
			
			[Bindable] private var user:ProviderModel;
			
			private function onDropDownOpen(event:DropDownEvent):void 
			{
				if( patientBirthDateChooser ) patientBirthDateChooser.addEventListener(MouseEvent.MOUSE_DOWN, stopPropagation, false, 0, true);
			}
			
			private function stopPropagation(event:Event):void 
			{
				event.stopImmediatePropagation();
			}
			
			private function patientsSearchFilter():void 
			{
				model.patients.filterFunction = filterPatientsSearch;
				model.patients.refresh();
			}
			
			private function filterPatientsSearch( item:PatientModel ):Boolean 
			{
				var pattern:RegExp = new RegExp("[^]*"+patientSearch.text+"[^]*", "i");
				var searchFilter:Boolean = (patientSearch.text == 'Search' || patientSearch.text == '') ? true : (pattern.test(item.lastName) || pattern.test(item.firstName));
				
				var birthDayFilter:Boolean = (txtPatientBirthDay.text == 'dd' || txtPatientBirthDay.text == '') ? true : item.birthdateLabel.substr(3,2) == txtPatientBirthDay.text;
				var birthMonthFilter:Boolean = (txtPatientBirthMonth.text == 'mm' || txtPatientBirthMonth.text == '') ? true : item.birthdateLabel.substr(0,2) == txtPatientBirthMonth.text;
				var birthYearFilter:Boolean = (txtPatientBirthYear.text == 'year' || txtPatientBirthYear.text == '') ? true : item.birthdateLabel.substr(6,4) == txtPatientBirthYear.text;
				
				var genderFilter:Boolean = dropPatientsSex.selectedIndex == 0 ? true : item.sex == dropPatientsSex.selectedItem.data;
				
				var notifFilter:Boolean = showPatientsAll.selected ? true : item.urgency != UrgencyType.NOT_URGENT;
				
				var patternHealthCondition:RegExp = new RegExp( "[^]*" + txtPatientSpecialConditions.text + "[^]*", "i");
				var healthConditionFilter:Boolean = (txtPatientSpecialConditions.text == txtPatientSpecialConditions.placeholder || txtPatientSpecialConditions.text == '') ? true : patternHealthCondition.test( item.conditions );
				
				var appointmentFilter:Boolean = true;
				
				if( showPatientsWithAppointments.selected )
				{
					appointmentFilter = false;
					
					var today:Date = AppProperties.getInstance().controller.model.today;
					var appointments:ArrayCollection = MainController( AppProperties.getInstance().controller ).teamAppointmentsController.getAppointments( user.id, UserModel.TYPE_PROVIDER, today );
					
					for each(var appointment:Appointment in appointments)
					{
						if( appointment.patient == item )
						{
							appointmentFilter = true;
							
							break;
						}
					}
				}
				
				return searchFilter && birthDayFilter && birthMonthFilter && birthYearFilter && genderFilter && notifFilter && healthConditionFilter && appointmentFilter;
			}
			
			private function onDateChooserChange(event:CalendarLayoutChangeEvent):void 
			{
				txtPatientBirthDay.text = patientBirthDateChooser.selectedDate.date < 10 ? '0' + patientBirthDateChooser.selectedDate.date : String(patientBirthDateChooser.selectedDate.date);
				txtPatientBirthMonth.text = patientBirthDateChooser.displayedMonth < 9 ? '0' + (patientBirthDateChooser.displayedMonth + 1) : String(patientBirthDateChooser.displayedMonth + 1);
				txtPatientBirthYear.text = String(patientBirthDateChooser.displayedYear);
				
				dropDownCalendar.closeDropDown(true);					
			}
			
			private function onPatientClick(event:ListEvent):void 
			{
				var user:PatientModel = PatientModel( event.itemRenderer.data );
				controller.showPatient( user );
			}
			
			private function showModule():void
			{
				var aEvt:ApplicationEvent = new ApplicationEvent( ApplicationEvent.SET_STATE, true, false, ProviderConstants.MODULE_PATIENTS );
				dispatchEvent( aEvt );
			}
			
			private function init():void
			{
				user = AppProperties.getInstance().controller.user as ProviderModel;
				
				for each(var patient:PatientModel in model.patients)
				{
					if( patient.urgency > UrgencyType.NOT_URGENT )
					{
						displayWarning = true;
						warningToolTip = "There are patients who need attention";
						
						break;
					}
				}
			}
		]]>
	</fx:Script>
	
	<enhancedtitlewindow:layout>
		<s:VerticalLayout paddingLeft="11" paddingTop="12" />
	</enhancedtitlewindow:layout>
	
	<s:Label text="Patient Search" fontWeight="bold" fontSize="12" />
	
	<s:HGroup width="610">
		
		<s:HGroup gap="-1" paddingTop="-2" paddingBottom="5">
			<general:TextInputPlaceholder  id="patientSearch" placeholder="Search" fontSize="11" fontStyle="italic" color="0x999999" contentBackgroundAlpha="0" height="24" paddingLeft="7" paddingTop="5" width="228" change="patientsSearchFilter()" />
			<s:Button styleName="searchButtonIcon" width="24" height="24" />
		</s:HGroup>
		
		<s:Spacer width="100%" />
		
		<s:RadioButton groupName="showPatients" id="showPatientsAll" label="Show all patients" selected="true" click="patientsSearchFilter()" />
		
		<s:Spacer width="50%" />
		
		<s:RadioButton groupName="showPatients" id="showPatientsNotif" label="Only show patients with notifications" click="patientsSearchFilter()" />
		
	</s:HGroup>
	
	<mx:LinkButton id="btnPatientsAdvancedSearch" label="Advanced Search Â»" fontSize="12" color="0xAEDEE4" textRollOverColor="0xAEDEE4" textSelectedColor="0xAEDEE4" skin="{null}" rollOver="btnPatientsAdvancedSearch.styleName='linkBtnUnderline';" rollOut="btnPatientsAdvancedSearch.styleName='linkBtn';" click="model.showAdvancedSearch = true; showModule();" paddingLeft="-3" />
	
	<s:HGroup width="610" paddingTop="2" paddingBottom="4">
		
		<s:VGroup gap="5">
			
			<s:HGroup verticalAlign="middle" gap="3">
				
				<general:TextInputPlaceholder id="txtPatientBirthDay" width="26" height="24" placeholder="dd" contentBackgroundAlpha="0" color="0xCCCBCB" fontStyle="italic" textAlign="center" maxChars="2" change="patientsSearchFilter()" />
				<s:Label text="/" fontSize="11" fontStyle="italic" color="0x989898" />
				
				<general:TextInputPlaceholder id="txtPatientBirthMonth" width="26" height="24" placeholder="mm" contentBackgroundAlpha="0" color="0xCCCBCB" fontStyle="italic" textAlign="center" maxChars="2" change="patientsSearchFilter()" />
				<s:Label text="/" fontSize="11" fontStyle="italic" color="0x989898" />
				
				<general:TextInputPlaceholder id="txtPatientBirthYear" width="31" height="24" placeholder="year" contentBackgroundAlpha="0" color="0xCCCBCB" fontStyle="italic" textAlign="center" maxChars="4" change="patientsSearchFilter()" />
				
				<s:DropDownList id="dropDownCalendar" dropShadowVisible="false" skinClass="skins.general.MyCalendarDropDownListSkin" itemRenderer="spark.skins.spark.DefaultComplexItemRenderer" width="25" requireSelection="false" click="event.stopImmediatePropagation()" open="onDropDownOpen(event)">
					<s:dataProvider>
						<s:ArrayList>
							<mx:DateChooser 
								id="patientBirthDateChooser" showToday="true" yearNavigationEnabled="true"
								contentBackgroundColor="0x3C3C3B" borderColor="0x4D4D4D" color="0xEDEDED" headerColors="[0xF7F7F7,0xB3B3B3]" selectionColor="0x585858" rollOverColor="0x3C3C3B" todayColor="0xD6D6D6" headerStyleName="dateChooserVitalGrayHeader"
								fontSize="11" change="onDateChooserChange(event); patientsSearchFilter();" />
						</s:ArrayList>
					</s:dataProvider>
				</s:DropDownList>
				
			</s:HGroup>
			
			<s:Label text="Date of Birth" fontStyle="italic" />
			
		</s:VGroup>
		
		<s:Spacer width="100%" />
		
		<s:VGroup gap="5">
			
			<s:DropDownList id="dropPatientsSex" styleName="dropDownListDark" height="24" width="74" selectedIndex="0" change="patientsSearchFilter()">
				<s:dataProvider>
					<s:ArrayList>
						<fx:Object label="All" />
						<fx:Object label="Male" data="1" />
						<fx:Object label="Female" data="0" />
					</s:ArrayList>							
				</s:dataProvider>
			</s:DropDownList>
			
			<s:Label text="Sex" fontStyle="italic" />
			
		</s:VGroup>
		
		<s:Spacer width="100%" />
		
		<s:VGroup gap="5">
			<general:TextInputPlaceholder id="txtPatientSpecialConditions" width="357" height="24" placeholder="e.g., Hypertension, laryngitis" contentBackgroundAlpha="0" color="0xCCCBCB" fontStyle="italic" change="patientsSearchFilter()" />
			<s:Label text="Special Health conditions" fontStyle="italic" />
		</s:VGroup>
		
	</s:HGroup>
	
	<s:Line xFrom="0" xTo="610">
		<s:stroke>
			<s:SolidColorStroke color="0x676767" weight="1" />
		</s:stroke>
	</s:Line>
	
	<s:HGroup fontSize="12" verticalAlign="middle">
		
		<s:HGroup paddingTop="3" gap="2">
			<s:Label text="There are" fontStyle="italic" color="0xCCCBCB" />
			<s:Label text="{model.urgentPatientCount}" fontStyle="italic" fontWeight="bold" color="0xFF931E" />
			<s:Label text="patients who need your attention." fontStyle="italic" color="0xCCCBCB" paddingRight="12" />
		</s:HGroup>
		
		<s:CheckBox id="showPatientsWithAppointments" label="Only show patients I'm seeing today" change="patientsSearchFilter()" />
		
	</s:HGroup>
	
	<mx:DataGrid 
		width="100%" 
		styleName="standardDataGridSolid" 
		dataProvider="{model.patients}"
		fontSize="12"
		horizontalScrollPolicy="off" 
		rowCount="9" rowHeight="22" paddingTop="6"
		itemClick="onPatientClick(event)"><!--dataProvider="{acMessagesToDisplay}" creationComplete="showInboxMessages()" itemClick="openMessage(event);"-->
		
		<mx:columns>
			<mx:DataGridColumn dataField="urgency" headerText="Urgency" width="68">
				<mx:itemRenderer>
					<fx:Component>
						<mx:HBox width="68" horizontalAlign="center">
							<fx:Script>
								<![CDATA[
									import enum.UrgencyType;
								]]>
							</fx:Script>
							<s:Image source="{UrgencyType.iconUrgent}" toolTip="Urgent" visible="{data.urgency == UrgencyType.URGENT}" includeInLayout="{data.urgency == UrgencyType.URGENT}" />
							<s:Image source="{UrgencyType.iconSomewhatUrgent}" toolTip="Somewhat urgent" visible="{data.urgency ==  UrgencyType.SOMEWHAT_URGENT}" includeInLayout="{data.urgency == UrgencyType.SOMEWHAT_URGENT}" />
						</mx:HBox>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn dataField="lastName" headerText="Last Name" width="101" />
			<mx:DataGridColumn dataField="firstName" headerText="First Name" width="100" />
			<mx:DataGridColumn dataField="sexLabel" headerText="Sex" width="58" />
			<mx:DataGridColumn dataField="birthdateLabel" headerText="DOB" width="80" />
			<mx:DataGridColumn dataField="status" headerText="Status" width="205" />
		</mx:columns>
		
	</mx:DataGrid>
	
</enhancedtitlewindow:EnhancedTitleWindow>
