<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:plus="external.TabBarPlus.plus.*"
	width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="navigate", type="events.ApplicationEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import components.provider.ProviderProfile;
			import components.provider.ViewProvider;
			
			import events.ApplicationEvent;
			import events.ProviderEvent;
			
			import models.ProviderModel;
			import models.ProvidersModel;
			
			import mx.events.ListEvent;
			
			[Bindable] public var model:ProvidersModel;
			[Bindable] public var teamRollOverRowIndex:int;
			
			private const SEARCH_PLACEHOLDER:String = 'Search Patients';
			
			private function selectTeam(event:MouseEvent):void
			{
				model.selectedProviderTeam = int( DisplayObject(event.currentTarget).name );
				update();
			}
			
			private function update():void
			{
				teamProfileList.removeAllElements();
				teamMessageLinks.removeAllElements();
				
				for each(var item:ProviderModel in model.providers)
				{
					if( model.selectedProviderTeam == -1 || parseInt(item.team) == model.selectedProviderTeam ) 
					{
						var profile:ProviderProfile = new ProviderProfile();
						profile.title = item.role + " Profile";
						profile.provider = item;
						profile.setStyle('dropShadowVisible',false);
						profile.addEventListener( ProviderEvent.SELECT, onTeamSelect );
						teamProfileList.addElement( profile );
					}
				}
				
				for each(var teamGroup:Object in model.providerGroups)
				{
					var group:String = teamGroup.group;
					
					var holder:VGroup = new VGroup();
					holder.gap = teamMessageLinks.gap;
					teamMessageLinks.addElement( holder );
					
					var header:Label = new Label();
					header.setStyle('fontSize',12);
					header.setStyle('color',"0xFFFFFF");
					header.text = group;
					holder.addElement( header );
					
					var link:LinkButton = new LinkButton();
					link.label = "Message to All " + group + "s";
					link.styleName = "linkBtnBlue";
					link.setStyle('fontSize',12);
					holder.addElement( link );
					
					var spacer:Spacer = new Spacer();
					spacer.height = 10;
					holder.addElement( spacer );
					
					for each(var teamMember:Object in teamGroup.members)
					{
						link = new LinkButton();
						link.label = teamMember.firstName + ' ' + teamMember.lastName;
						link.styleName = "linkBtnBlue";
						link.setStyle('fontSize',12);
						holder.addElement( link );
					}
					
					spacer = new Spacer();
					spacer.height = 20;
					holder.addElement( spacer );
				}
			}
			
			private function showTeamMember( data:ProviderModel ):void
			{	
				var viewTeamMember:ViewProvider = new ViewProvider();
				viewTeamMember.provider = data;
				viewStackTeamMembers.addChild(viewTeamMember);
				
				viewStackTeamMembers.selectedIndex = viewStackTeamMembers.numChildren - 1;
				tabsTeamMembers.selectedIndex = viewStackTeamMembers.selectedIndex;
			}
			
			private function onHeaderClick(event:MouseEvent):void
			{
				var evt:ApplicationEvent = new ApplicationEvent( ApplicationEvent.NAVIGATE );
				evt.data = 0;
				dispatchEvent( evt );
			}
			
			protected function onTeamClick(event:ListEvent):void 
			{
				showTeamMember( ProviderModel(event.itemRenderer.data) );
			}
			
			protected function onTeamSelect(event:ProviderEvent):void 
			{
				showTeamMember( event.provider );
			}
			
			private function onTeamRollOver(event:ListEvent):void
			{
				teamRollOverRowIndex = event.rowIndex;
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	
	<s:BorderContainer height="40" width="100%">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" paddingLeft="16" />
		</s:layout>
		<s:backgroundFill>
			<s:LinearGradient rotation="270">
				<s:GradientEntry color="0xA3A3A3" alpha="1" ratio=".38" />
				<s:GradientEntry color="0x706F6F" alpha="1" ratio="1" /> <!--ratio="0.8834"-->
			</s:LinearGradient>
		</s:backgroundFill>
		
		<s:Image source="@Embed('images/patientHome.png')" buttonMode="true" click="onHeaderClick(event)" />
		<s:Label id="lblBreadcrumbPatient" text="Team Profile" color="0xFFFFFF" fontSize="22" fontWeight="bold" paddingTop="2" paddingLeft="3" />
		<s:Label text="â–¼" fontSize="10" color="0xFFFFFF" paddingTop="4" paddingLeft="12" />
		<s:Spacer width="100%" />
		<s:HGroup gap="-1" paddingRight="38">
			<s:TextInput id="search" text="{SEARCH_PLACEHOLDER}" fontSize="10" fontStyle="italic" color="0x999999" height="24" width="166" paddingTop="5" click="{if(search.text == SEARCH_PLACEHOLDER) search.text=''}" change="{model.searchText = search.text}" />
			<s:Button styleName="searchButtonIcon" width="24" height="24" />
		</s:HGroup>
	</s:BorderContainer>
	
	<s:HGroup width="100%" paddingTop="30">
		
		<mx:VBox width="100" height="100%" paddingLeft="20" paddingTop="5">
			
			<mx:Repeater id="teamList" dataProvider="{model.providerTeams}">
				<mx:LinkButton name="{teamList.currentItem.value}" label="{teamList.currentItem.label}" click="selectTeam(event);" textAlign="left" styleName="linkBtnOrange" fontSize="13" fontWeight="bold" height="25" />
			</mx:Repeater>
			
		</mx:VBox>
		
		<s:Group creationComplete="{tabsTeamMembers.setTabClosePolicy(0, false);}">
			
			<mx:ViewStack id="viewStackTeamMembers" borderColor="0xBDBCBC" cornerRadius="2" backgroundColor="0x4A4A49" borderVisible="true" borderStyle="solid" width="884" y="37">
				
				<s:NavigatorContent label="Profiles">
					
					<s:layout>
						<s:VerticalLayout gap="0" />
					</s:layout>
					
					<s:BorderContainer height="37" width="100%" backgroundColor="0x706F6F">
						<s:layout>
							<s:HorizontalLayout verticalAlign="middle" paddingRight="6" paddingLeft="8"/>
						</s:layout>
						
						<s:HGroup gap="0" width="100%" horizontalAlign="right">
							<s:Button id="btnTeamMembersProfile" width="29" height="24" icon="@Embed('images/btnProfile.png')" chromeColor="{viewsTeamMembers.selectedIndex==0?0xFF931E:0xB3B3B3}" click="viewsTeamMembers.selectedIndex=0;update()" />
							<s:Button id="btnTeamMembersList" width="29" height="24" icon="@Embed('images/btnCalendarList.png')" styleName="buttonText" chromeColor="{viewsTeamMembers.selectedIndex==1?0xFF931E:0xB3B3B3}" click="viewsTeamMembers.selectedIndex=1"/>
						</s:HGroup>
						
					</s:BorderContainer>
					
					<s:Line xFrom="0" xTo="884">
						<s:stroke>
							<s:SolidColorStroke color="0xBDBCBC"/>
						</s:stroke>
					</s:Line>
					
					<mx:ViewStack id="viewsTeamMembers" width="100%" creationPolicy="all" selectedIndex="1">
						
						<!--	profile view	-->
						<s:NavigatorContent>
							
							<s:Scroller width="100%" height="600" horizontalScrollPolicy="off">
								
								<s:VGroup paddingTop="40">
									
									<s:Label styleName="greenBoldText" text="{model.selectedProviderTeam>-1?'Team ' + (model.selectedProviderTeam+1):'All Teams'}" paddingLeft="10" />
									
									<mx:ViewStack selectedIndex="{model.selectedProviderTeam==-1?0:1}" paddingBottom="20" resizeToContent="true">
										
										<!--	all teams	-->
										<s:NavigatorContent>
											
											<s:VGroup paddingLeft="10">	
												<s:HGroup>
													<s:Label text="Number of teams:" textAlign="right" width="100" styleName="grayTextBold11" />
													<s:Label text="{model.providerTeams.length}" />
												</s:HGroup>
												<s:HGroup>
													<s:Label text="Team Members:" textAlign="right" width="100" styleName="grayTextBold11" />
													<s:Label text="{model.providers.length}" />
												</s:HGroup>
											</s:VGroup>
											
										</s:NavigatorContent>
										
										<!--	a specific team	-->
										<s:NavigatorContent>
											
											<s:HGroup width="100%" paddingLeft="10">
												
												<!--	column 1	-->
												<s:VGroup width="50%">	
													<s:HGroup>
														<s:Label text="Date Created:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="August 1, 2011" />
													</s:HGroup>
													<s:HGroup>
														<s:Label text="Created by:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="Hugh Spencer (ADMIN)" />
													</s:HGroup>
													<s:HGroup>
														<s:Label text="Purpose:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="General care and emergency care" />
													</s:HGroup>
												</s:VGroup>
												
												<!--	column 2	-->
												<s:VGroup width="50%">
													<s:HGroup>
														<s:Label text="Last Updated:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="August 1, 2011" />
													</s:HGroup>
													<s:HGroup>
														<s:Label text="Updated by:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="Bob Ferguson" />
													</s:HGroup>
													<s:HGroup>
														<s:Label text="Location:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="NMMC" />
													</s:HGroup>
													<s:HGroup>
														<s:Label text="Team members:" textAlign="right" width="100" styleName="grayTextBold11" />
														<s:Label text="{model.providers.length}"/>
													</s:HGroup>
												</s:VGroup>
											</s:HGroup>
											
										</s:NavigatorContent>
										
									</mx:ViewStack>
									
									<s:Line xFrom="0" xTo="884">
										<s:stroke>
											<s:SolidColorStroke color="0xBDBCBC" weight="2" />
										</s:stroke>
									</s:Line>
									
									<s:HGroup width="100%" paddingLeft="10" paddingTop="10">
										
										<s:VGroup width="20%">
											
											<s:VGroup>
												<mx:LinkButton label="View Team Schedule" styleName="linkBtnBlue" fontSize="12" />
												<mx:LinkButton label="Messages to Team" styleName="linkBtnBlue" fontSize="12" />
												<s:Spacer height="20"/>
												<s:VGroup id="teamMessageLinks" width="20%" gap="2" />
											</s:VGroup>
											
										</s:VGroup>
										
										<s:TileGroup 
											id="teamProfileList" 
											horizontalGap="20" verticalGap="20" 
											requestedColumnCount="2" columnWidth="{ProviderProfile.WIDTH}" 
											paddingTop="10" paddingBottom="20" />
										
									</s:HGroup>
									
								</s:VGroup>
								
							</s:Scroller>
							
						</s:NavigatorContent>
						
						<!--	list view	-->
						<s:NavigatorContent>
							<mx:DataGrid 
								buttonMode="false" selectable="true" 
								width="100%" height="600"
								color="0xFFFFFF" fontFamily="myMyriadNoCFF" verticalAlign="middle"
								dataProvider="{model.providers}"
								rowHeight="25" headerHeight="25"
								headerBackgroundSkin="skins.general.CustomDataGridHeaderBackgroundSkin" headerSeparatorSkin="mx.skins.ProgrammaticSkin" headerStyleName="dataGridHeaderAlternative"
								horizontalGridLines="true" horizontalGridLineColor="0x444442" verticalGridLines="true"
								alternatingItemColors="[0x3C3C3B,0x333333]" rollOverColor="0x31535E" textRollOverColor="0xFFFFFF" selectionColor="0x31535E" textSelectedColor="0xFFFFFF"
								horizontalScrollPolicy="off" verticalScrollPolicy="off"  horizontalSeparatorSkin="{null}" 
								itemRollOver="onTeamRollOver(event)" itemRollOut="teamRollOverRowIndex=-1" itemClick="onTeamClick(event)">
								<mx:columns>
									<mx:DataGridColumn dataField="team" width="87"  headerText="Team" textAlign="center" />
									<mx:DataGridColumn dataField="role" width="87" headerText="Title" />
									<mx:DataGridColumn headerText="Name" width="145">
										<mx:itemRenderer>
											<fx:Component>
												<mx:HBox horizontalScrollPolicy="off" width="100%">
													<fx:Script>
														<![CDATA[
															import mx.collections.ListCollectionView;
														]]>
													</fx:Script>
													<s:Label text="{data.firstName + ' ' + data.lastName}" fontSize="12" paddingLeft="10" fontFamily="myMyriad" width="130" />
													<mx:HBox width="16">
														<s:Image source="@Embed('images/messagesEnvelope.png')" toolTip="Message" visible="{(outerDocument.model.providers as ListCollectionView).getItemIndex(data) == outerDocument.teamRollOverRowIndex}" includeInLayout="{data.rowIndex == outerDocument.teamRollOverRowIndex}" />
													</mx:HBox>
												</mx:HBox>
											</fx:Component>
										</mx:itemRenderer>
									</mx:DataGridColumn>
									<mx:DataGridColumn dataField="department" width="121" headerText="Department" />
									<mx:DataGridColumn dataField="location" width="101" headerText="Location" />
									<mx:DataGridColumn dataField="specialty" width="160" headerText="Specialty"/>
									<mx:DataGridColumn dataField="status" width="103" headerText="Board status" />
								</mx:columns>
							</mx:DataGrid>
						</s:NavigatorContent>
					</mx:ViewStack>
				</s:NavigatorContent>
				
			</mx:ViewStack>
			<plus:TabBarPlus id="tabsTeamMembers" gap="6" height="38" left="0" cornerRadius="5" styleName="messagesTabs" closePolicy="always" dataProvider="{viewStackTeamMembers}" fontSize="14" />
		</s:Group>
		
	</s:HGroup>
		
</s:NavigatorContent>
