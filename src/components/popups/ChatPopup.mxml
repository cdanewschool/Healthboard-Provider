<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="268" maxHeight="467"
	backgroundAlpha="1" backgroundColor="0x3C3C3B" borderColor="0xF29222" cornerRadius="5" 
	skinClass="external.skins.TitleWindowSkin" styleName="teamProfileTitle" 
	controlBarVisible="true" close="onClose(event)" 
	resize="resize(event)" creationComplete="init()">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import models.Chat;
			import models.ChatMessage;
			import models.FileUpload;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			private var updateTimer:Timer;
			private var fileRef:FileReference;
			
			[Bindable] public var chat:Chat;
			
			public var attachments:ArrayCollection;
			
			private function sendMessage( event:MouseEvent ):void
			{
				relayMessage();
			}
			
			private function relayMessage():void
			{
				var message:ChatMessage = new ChatMessage();
				message.time = new Date();
				message.text = input.text;
				message.user = chat.sourceUser;
				
				if( attachments && attachments.length )
					message.attachments = new ArrayCollection( attachments.source.slice() );
				
				chat.addMessage( message );
				
				//	clear stuff
				input.text = "";
				attachments = new ArrayCollection;
			}
			
			private function addAttachment( event:MouseEvent ):void
			{
				fileRef.browse();
				
			}
			
			private function onAttachmentSelect( event:Event ):void
			{
				fileRef.load();
			}	
			
			private function onAttachmentComplete( event:Event ):void
			{
				var attachment:FileUpload = new FileUpload( fileRef.name, fileRef.size, fileRef.data );
				
				if( !attachments ) attachments = new Vector.<FileUpload>;
				attachments.addItem( attachment );
			}
			
			private function copyChat( event:MouseEvent ):void
			{
				System.setClipboard( chat.log );
			}
			
			private function onUpdate( event:TimerEvent ):void
			{
				title = chat.targetUser.fullNameAbbreviated + ' - ' + chat.elapsed;
			}
			
			private function onUpdateChatMode(event:IndexChangeEvent):void
			{
				chat.mode = ButtonBar(event.currentTarget).selectedItem.data;
				
				initChatMode();
			}
			
			private function initChatMode():void
			{
				currentState = chat.mode + 'Chat';
			}
			
			private function resize(event:ResizeEvent=null):void
			{
				position();
			}
			
			private function position():void
			{
				this.x = stage.stageWidth - (this.width + 10);
				this.y = stage.stageHeight - (this.height + 10);
			}
			
			private function onClose(event:Event):void
			{
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE ) );
				
				PopUpManager.removePopUp(this);
			}
			
			private function init():void
			{
				updateTimer = new Timer( 500 );
				updateTimer.addEventListener( TimerEvent.TIMER, onUpdate );
				
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, onAttachmentSelect);
				fileRef.addEventListener(Event.COMPLETE, onAttachmentComplete);
				
				volumeSlider.setStyle('accentColor',0xeeeeee);
				
				updateMode.selectedIndex = Chat.getModeIndex( chat.mode );
				
				initChatMode();
				
				controlBarVisible=false;
				
				position();
				
				updateTimer.start();
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="textChat" />
		<s:State name="voiceChat" />
		<s:State name="videoChat" />
	</s:states>
	
	<s:controlBarContent />
	
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" />
	</s:layout>
	
	<s:Group includeIn="videoChat">
		
		<s:BorderContainer borderColor="0xBBBDBF" borderWeight="1" width="240" height="184"> 
			<s:Image id="targetUserPic" width="240" height="184" creationComplete="{targetUserPic.source = chat.targetUser.getProfilePictureURL('medium')}" />
		</s:BorderContainer>
		
		<s:BorderContainer borderColor="0xBBBDBF" borderWeight="1" width="240" height="184"> 
			<s:Image id="sourceUserPic" width="78" height="55" right="5" bottom="5" creationComplete="{sourceUserPic.source = chat.sourceUser.getProfilePictureURL()}" />
		</s:BorderContainer>
		
	</s:Group>
	
	<s:HGroup>
		
		<s:ButtonBar 
			id="updateMode"
			includeIn="textChat,voiceChat,videoChat"
			width="71" height="20"
			dataProvider="{Chat.MODES}" 
			iconField="icon"
			change="onUpdateChatMode(event)" 
			firstButton="skins.general.IconButtonSkin"
			middleButton="skins.general.IconButtonSkin" 
			lastButton="skins.general.IconButtonSkin" fontSize="11">
			
			<s:layout>
				<s:ButtonBarHorizontalLayout gap="3" />
			</s:layout>
			
		</s:ButtonBar>
		
		<s:Line yFrom="0" yTo="17">
			<s:stroke>
				<s:SolidColorStroke color="0x999999" weight="1" />
			</s:stroke>
		</s:Line>
		
		<s:ToggleButton icon="images/button_icons/volume.png" height="20" width="20"  />
		
		<s:HSlider id="volumeSlider" skinClass="skins.general.HSlider.HSliderSkin" width="127" height="20" showDataTip="false" />
		
	</s:HGroup>
	
	<mx:VDividedBox verticalGap="4">
		
		<s:List id="output" width="240" height="117" dataProvider="{chat.messages}" itemRenderer="components.itemrenderers.ChatMessageRenderer" rollOverColor="0x808080">
			<s:layout>
				<s:VerticalLayout variableRowHeight="true" paddingLeft="5" paddingTop="5" paddingRight="5" paddingBottom="5" />
			</s:layout>
		</s:List>
		
		<s:TextArea id="input" width="240" height="58" creationComplete="{stage.focus=input}" />
		
	</mx:VDividedBox>
	
	<s:HGroup>
		
		<s:HGroup gap="2" verticalAlign="middle">
			<mx:LinkButton styleName="linkBtnBlue" label="+ add attachments" fontWeight="normal" fontSize="11" click="addAttachment(event)" />
			<s:Line yFrom="0" yTo="10">
				<s:stroke>
					<s:SolidColorStroke color="0xAEDEE4" weight="1" />
				</s:stroke>
			</s:Line>
			<mx:LinkButton styleName="linkBtnBlue" label="copy chat" fontWeight="normal" fontSize="11" click="copyChat(event)" />
		</s:HGroup>
		
		<s:HGroup width="100%" horizontalAlign="right">
			<s:Button label="Send" click="sendMessage(event)" />
		</s:HGroup>
		
	</s:HGroup>
	
</s:TitleWindow>
