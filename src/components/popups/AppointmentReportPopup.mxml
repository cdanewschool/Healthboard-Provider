<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	backgroundColor="0xFFFFFF" borderVisible="false" dropShadowVisible="false" cornerRadius="0" 
	width="612" height="792"
	creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import ASclasses.Constants;
			
			import controllers.AppointmentsController;
			import controllers.Controller;
			import controllers.MainController;
			import controllers.TeamAppointmentsController;
			
			import models.Appointment;
			import models.ProviderModel;
			import models.UserModel;
			
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			import mx.printing.FlexPrintJob;
			import mx.printing.FlexPrintJobScaleType;
			
			import spark.components.HGroup;
			
			import utils.DateUtil;
			
			public var providers:ArrayCollection;
			public var from:Date;
			public var to:Date;
			
			private function initDate():void
			{
				var today:Date = MainController(AppProperties.getInstance().controller).today;
				date.text = Constants.MONTHS[ today.month ] + " " + today.date + ", " + today.fullYear;
			}
			
			private function init():void
			{
				var label:Label;
				
				var date:Date = new Date( from.fullYear, from.month, from.date, from.hours, from.minutes, from.seconds );
					
				while( date.time < to.time )
				{
					label = new Label();
					label.styleName = "black12Bold";
					label.text = ("Appointments on " + Constants.MONTHS[ from.month ] + " " + from.date + ", " + from.fullYear).toString().toUpperCase();
					content.addElement( label );
					
					for each(var provider:ProviderModel in providers)
					{
						var group:VGroup = new VGroup();
						content.addElement( group );
						
						var id:int = providers.getItemIndex(provider) + 1;
						
						label = new Label();
						label.styleName = "black12Bold";
						label.text = id + '. ' + provider.fullName.toUpperCase();
						group.addElement( label );
						
						var appointments:ArrayCollection = MainController( AppProperties.getInstance().controller ).teamAppointmentsController.getAppointments( provider.id, UserModel.TYPE_PROVIDER, from );
						
						if( appointments.length )
						{
							var list:VGroup = new VGroup();
							list.gap = 15;
							group.addElement( list );
							
							for(var i:int=0;i<appointments.length;i++)
							{
								var appointment:Appointment = Appointment( appointments.getItemAt(i) );
								
								var row:HGroup = new HGroup();
								row.gap = 5;
								list.addElement( row );
								
								label = new Label();
								label.width = 75;
								label.text = DateUtil.formatTimeFromDate( appointment.from, false ) + '-' + DateUtil.formatTimeFromDate( appointment.to, false );
								label.styleName = "black12Bold";
								row.addElement( label );
								
								var col:VGroup = new VGroup();
								row.addElement( col );
								
								var type:Object = Appointment.getTypeByKey(appointment.type);
								
								if( type )
								{
									label = new Label();
									label.text = type.label;
									label.styleName = "black12";
									col.addElement( label );
								}
								
								if( appointment.patient )
								{
									label = new Label();
									label.text = 'Patient: ' + appointment.patient.fullName;
									label.styleName = "black12";
									col.addElement( label );
								}
							}
						}
						else
						{
							label = new Label();
							label.text = 'No appointments';
							label.styleName = "black12";
							group.addElement( label );
						}
					}
					
					date.time += DateUtil.DAY;
				}
				
				/*
				var printJob:FlexPrintJob = new FlexPrintJob();
				printJob.addObject(container, FlexPrintJobScaleType.MATCH_WIDTH);
				printJob.start();
				*/
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup id="container" paddingTop="10" paddingLeft="30" paddingRight="30" gap="20">
		
		<s:Image source="@Embed('images/logo-black.png')" />
		
		<s:Label text="Appointments" textAlign="center" width="100%" styleName="black16SemiBold" />
		
		<s:Line xFrom="0" xTo="552">
			<s:stroke>
				<s:SolidColorStroke color="0x898989" weight="1"/>
			</s:stroke>
		</s:Line>
		
		<s:VGroup>
			<s:HGroup>
				<s:Label text="Provider Name:" styleName="black12Bold" />
				<s:Label id="provider" styleName="black12" />
			</s:HGroup>
			<s:HGroup>
				<s:Label text="Today's Date:" styleName="black12Bold" />
				<s:Label id="date" styleName="black12" creationComplete="initDate()" />
			</s:HGroup>
		</s:VGroup>
		
		
		<s:Line xFrom="0" xTo="552">
			<s:stroke>
				<s:SolidColorStroke color="0x898989" weight="1"/>
			</s:stroke>
		</s:Line>
		
		<s:Scroller width="{width-60}" height="600" horizontalScrollPolicy="off">
			<s:VGroup id="content" gap="20" />	
		</s:Scroller>
		
	</s:VGroup>
	
	<s:Button id="closeButton" skinClass="skins.general.CustomTitleWindowCloseButtonSkin"
			  width="25" height="25" right="-11" top="-14" click="{PopUpManager.removePopUp(this)}" />
	
</s:BorderContainer>
