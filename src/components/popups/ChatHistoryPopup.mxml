<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	width="482" height="509"
	controlBarVisible="true" skinClass="skins.general.myHeaderlessTitleWindow" 
	creationComplete="init()" xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import controllers.Controller;
			import controllers.MainController;
			
			import models.Chat;
			import models.ChatSearch;
			import models.UserModel;
			
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			
			import utils.DateUtil;
			
			[Bindable] public var user:UserModel;
			[Bindable] public var chat:ChatSearch;
			
			[Bindable] private var timeRanges:ArrayCollection = new ArrayCollection( ["All", "Past week", "Past month", "Past year"] );
			
			private function close():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function sendMessage():void
			{
				//	send message
				
				close();
			}
			
			private function filter():void
			{
				user.chatHistory.filterFunction = filterHistory;
				user.chatHistory.refresh();
			}
			
			private function filterHistory(item:Chat):Boolean
			{
				var rangeIndex:int = timeRangeSelect.selectedIndex;
				var groupIndex:int = groupSelect.selectedIndex;
				
				var valid:Boolean = true;
				
				if( valid && groupIndex > 0 ) valid = groupIndex == 1 ? item.targetUser.userType == UserModel.TYPE_PATIENT : item.targetUser.userType == UserModel.TYPE_PROVIDER;
				if( valid && rangeIndex > 0 )
				{
					var today:Date = MainController(AppProperties.getInstance().controller).model.today;
					var diff:Number = DateUtil.compareDates( today, item.endTime );
					
					if( rangeIndex == 1 ) valid = diff <= DateUtil.WEEK;
					else if( rangeIndex == 2 ) valid = diff <= DateUtil.MONTH;
					else if( rangeIndex == 3 ) valid = diff <= DateUtil.YEAR;
				}
				
				return valid;
			}
			
			private function init():void
			{
				timeRangeSelect.dataProvider = timeRanges;
				filter();
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="13" paddingTop="13" paddingRight="16" paddingBottom="16" gap="12" />
	</s:layout>
	
	<s:Label text="Communication History" styleName="darkGrayBold16" />
	
	<s:VGroup gap="15" width="100%" height="100%">
		
		<s:HGroup gap="10" width="100%" horizontalAlign="right" verticalAlign="middle">
			<s:DropDownList id="groupSelect" width="90" height="24" dataProvider="{chat.chatGroups}" change="filter()" selectedIndex="0" />
			<s:Label text="Time Range:" styleName="mediumTextBlack" />
			<s:DropDownList id="timeRangeSelect" width="90" height="24" dataProvider="{timeRanges}" change="filter()" selectedIndex="0" />
		</s:HGroup>
		
		<s:DataGroup dataProvider="{user.chatHistory}" height="100%">
			<s:layout>
				<s:VerticalLayout gap="10" />
			</s:layout>
			<s:itemRenderer>
				<fx:Component>
					<mx:Label text="{data.label}" styleName="mediumTextBlack" width="100%" />
				</fx:Component>
			</s:itemRenderer>
		</s:DataGroup>
		
	</s:VGroup>
	
	<s:Line xFrom="10" xTo="460">
		<s:stroke>
			<s:SolidColorStroke color="0x000000"/>
		</s:stroke>
	</s:Line>
	
	<s:HGroup gap="0" width="100%" horizontalAlign="right">
		<s:Button label="Close" width="71" height="24" click="PopUpManager.removePopUp(this)" />
	</s:HGroup>
	
</s:TitleWindow>
