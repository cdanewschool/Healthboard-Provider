<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:general="components.general.*"
	xmlns:popups="components.popups.*"
	width="646" height="611"
	controlBarVisible="true" 
	skinClass="skins.general.myHeaderlessTitleWindow"
	creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import components.popups.DeleteConfirmation;
			
			import controllers.ExerciseController;
			
			import models.modules.ExerciseModel;
			import models.modules.exercise.ExerciseActivityGroup;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ItemClickEvent;
			import mx.managers.PopUpManager;
			
			[Bindable] private var controller:ExerciseController = AppProperties.getInstance().controller.exerciseController;
			[Bindable] private var model:ExerciseModel = ExerciseModel(controller.model);
			
			[Bindable] public var exerciseGroups:ArrayCollection;
			
			private var dirty:Boolean;
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				if( dirty )
				{
					for(var i:int=0;i<exerciseGroups.length;i++)
					{
						var item:ExerciseActivityGroup = exerciseGroups.getItemAt( i ) as ExerciseActivityGroup;
						var tab:ManageActivityTab = views.numChildren > i ? views.getChildAt(i) as ManageActivityTab : null;
						
						if( !tab || tab.exerciseGroup != item )
						{
							if( !tab ) tab = new ManageActivityTab();
							
							tab.exerciseGroup = item;
							views.addChild( tab );
						}
					}
					
					for(i=exerciseGroups.length;i<views.numChildren;i++)
					{
						views.removeChildAt(i);
					}
					
					dirty = false;
				}
			}
			
			private function onAddNewClick():void
			{
				var exerciseGroup:ExerciseActivityGroup = new ExerciseActivityGroup("Custom");
				exerciseGroups.addItem( exerciseGroup );
				
				tabs.selectedIndex = exerciseGroups.length - 1;
			}
			
			private function onRemoveClick():void
			{
				var item:ExerciseActivityGroup = exerciseGroups.getItemAt( tabs.selectedIndex ) as ExerciseActivityGroup;
				
				var popup:DeleteConfirmation = DeleteConfirmation( PopUpManager.createPopUp(AppProperties.getInstance().controller.application, DeleteConfirmation) as TitleWindow );
				popup.data = item;
				popup.confirmationText = "Are you sure you want to delete " + item.name + "?";
				popup.addEventListener( CloseEvent.CLOSE, onConfirmDeleteGroupClose );
				
				PopUpManager.centerPopUp( popup );
			}
			
			private function onConfirmDeleteGroupClose(event:CloseEvent):void
			{
				var popup:DeleteConfirmation = event.currentTarget as DeleteConfirmation;
				popup.removeEventListener( CloseEvent.CLOSE, onConfirmDeleteGroupClose );
				PopUpManager.removePopUp( popup );
				
				var item:ExerciseActivityGroup = popup.data as ExerciseActivityGroup;
				
				if( event.detail == Alert.YES )
				{
					exerciseGroups.removeItemAt( exerciseGroups.getItemIndex( item ) );
					
					dirty = true;
					
					invalidateProperties();
				}
			}
			
			private function onFinishClick():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function onSaveClick():void
			{
			}
			
			private function onCloseClick():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function onCancelClick():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function onTabClick(event:ItemClickEvent):void
			{
				if( views.numChildren > event.index ) views.selectedIndex = event.index;
			}
			
			private function init():void
			{
				controlBarVisible = false;
				
				dirty = true;
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="20" paddingTop="15" paddingRight="20" gap="5" horizontalAlign="left" />
	</s:layout>
	
	<s:Label text="Manage Assigned Activities" styleName="darkGrayBold16" paddingBottom="5" />
	<s:Label text="You have assigned {exerciseGroups.length} types of exercise for the patient." styleName="darkGray12 italic" />
	
	<s:HGroup>
		<s:Button label="+ Add New" width="75" height="24" click="onAddNewClick();" skinClass="skins.general.IconButtonSkin" />
		<s:Button label="Remove" width="60" height="24" skinClass="skins.general.IconButtonSkin" enabled="{tabs.selectedIndex>-1}" click="onRemoveClick()" />
	</s:HGroup>
	
	<s:HGroup gap="-1">
		
		<s:Scroller maxHeight="471" horizontalScrollPolicy="off">
			
			<s:Group>
				<mx:TabBar id="tabs" width="150" direction="vertical" dataProvider="{exerciseGroups}" labelField="name" tabHeight="28" itemClick="onTabClick(event)" />
			</s:Group>
			
		</s:Scroller>
		
		<s:BorderContainer backgroundColor="0xFFFFFF" width="455" height="472">
			
			<mx:ViewStack id="views" width="100%" height="100%" />
					
		</s:BorderContainer>
		
	</s:HGroup>
	
	<s:HGroup width="100%" horizontalAlign="right" paddingTop="8">
		<s:Button label="Save" width="55" height="24" click="onSaveClick();" skinClass="skins.general.IconButtonSkin" />
		<s:Button label="Finish" width="55" height="24" click="onFinishClick();" skinClass="skins.general.IconButtonSkin" />
		<s:Button label="Cancel" width="55" height="24" click="onCancelClick();" skinClass="skins.general.IconButtonSkin" />
		<!--<s:Button label="Close" width="85" height="24" click="onCloseClick();" skinClass="skins.general.IconButtonSkin" />-->
	</s:HGroup>
	
</s:TitleWindow>
